/**───────────────────────────────────────────────────────────────────────────────────**/
buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
/**───────────────────────────────────────────────────────────────────────────────────**/
apply plugin: 'net.minecraftforge.gradle.forge'

sourceCompatibility = targetCompatibility = '1.8'
compileJava { sourceCompatibility = targetCompatibility = '1.8' }

version = "1.12" + "-" + getVersions('VERSION')
group = "terrails.terracore"
archivesBaseName = "TerraCore"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "1.12.2" + "-" + "14.23.1.2559"
	mappings = "snapshot_20171003"
    runDir = "run"
}

apply plugin: 'maven-publish'
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId 'terrails'
            artifactId 'TerraCore'

            from components.java
        }
    }
}
publishing {
    repositories {
        mavenLocal()
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

String getVersions(String type) {
    String major = "0"
    String revision = "0"
    String patch = "0"
    String prefix = "public static final String $type = \""
    File file = file("src/main/java/terrails/terracore/Constants.java")
    file.eachLine { String s ->
        s = s.trim()
        if (s.startsWith(prefix)) {
            s = s.substring(prefix.length(), s.length() - 2)
            String[] pts = s.split("\\.")

            major = pts[0]
            revision = pts[1]
            patch = pts[2]
        }
        return "$major.$revision.$patch"
    }
}